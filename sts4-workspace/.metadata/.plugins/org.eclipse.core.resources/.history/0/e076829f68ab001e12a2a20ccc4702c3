package com.example.study.Service;

import java.util.Optional;

import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.example.study.DataNotFoundException;
import com.example.study.Entity.SiteUser;
import com.example.study.Repository.UserRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class UserService {
	
	private final UserRepository userRepository;
	private final PasswordEncoder passwordEncoder;
	
	public SiteUser crete(String username, String email, String password) {
		SiteUser siteUser = new SiteUser();
		
		siteUser.setUsername(username);
		siteUser.setEmail(email);
		siteUser.setPassword(passwordEncoder.encode(password));
		
		this.userRepository.save(siteUser);
		
		return siteUser;
	}
	
	public SiteUser getUser(String username) {
		Optional<SiteUser> siteUser = this.userRepository.findByusername(username);
		
		if(siteUser.isPresent()) {
			return siteUser.get();
		}else {
			throw new DataNotFoundException("not found");
		}
	}
	
	public SiteUser search(Long id) {
		SiteUser siteUser = this.userRepository.findByUsername(id);
	}
}
