package com.example.study.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.util.matcher.AntPathRequestMatcher;

@Configuration // 스프링의 환경설정 파일 security 설정을 위해 사용
@EnableWebSecurity // 모든 요청 URL이 security의 제어를 받도록 설정
public class SecurityConfig {
	
	// security를 적용하면 CSRF 기능이 동작한다. -> CSRF 토큰 값을 세션을 통해 발행하고 웹 페이지에서는 폼 전송시에 해당 토큰을 함꼐 전송하여 
	//웹페이지에서 작성된 데이터가 전달 되는지 검증하는
	@Bean
	SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		http.authorizeHttpRequests((authorizeHttpRequests) -> authorizeHttpRequests
			.requestMatchers(new AntPathRequestMatcher("/**")).permitAll()); // 모든 인증되지 않은 요청을 허락
		
		return http.build();
	}
}
