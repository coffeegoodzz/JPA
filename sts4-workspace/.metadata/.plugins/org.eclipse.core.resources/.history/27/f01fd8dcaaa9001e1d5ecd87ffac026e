package com.example.study.Service;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.example.study.DataNotFoundException;
import com.example.study.Entity.Question;
import com.example.study.Repository.QuestionRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class QuestionService {
	
	private final QuestionRepository questionRepository;

	
	public List<Question> getList(){
		return this.questionRepository.findAll();
	}
	
	public Question getQuestion(Long id) {
		Optional<Question> question = this.questionRepository.findById(id);
		
		if(question.isPresent()) { // 해당 데이터가 존재하는지 여부 검사
			return question.get();
		}else {
			throw new DataNotFoundException("question not found");
		}
	}
	
	public void create(String subject, String content) {
		Question q = new Question();
		
		q.setSubject(subject);
		q.setContent(content);
		q.setCreateDate(LocalDateTime.now());
		this.questionRepository.save(q);
	}
	
	// 페이징 처리 메소드
	public Page<Question> getPageList(int page) {
		Pageable pageable = PageRequest.of(page, 10); // 조회 할 페이지의 번호, 한 페이지에 보여줄 게시물의 갯수 
		
		return this.questionRepository.findAll(pageable);
	}
	
}
